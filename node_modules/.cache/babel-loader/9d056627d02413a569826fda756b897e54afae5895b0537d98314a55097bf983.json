{"ast":null,"code":"var _jsxFileName = \"/home/ian/coding/madness/group-5/src/MovieList.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport MovieSearch from './MovieSearch';\nimport './MovieList.css'; // Import CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieList() {\n  _s2();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showBackgroundImage, setShowBackgroundImage] = useState(true); // Add state variable\n\n  const history = useHistory(); // Initialize useHistory\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const fetchMovies = () => {\n    fetch('https://api.themoviedb.org/3/movie/popular?api_key=ae57e943f23fd67a50f1579e4ed5e7c5').then(response => response.json()).then(data => {\n      if (data.results && data.results.length > 0) {\n        const moviesWithPosters = data.results.map(movie => {\n          return fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=ae57e943f23fd67a50f1579e4ed5e7c5`).then(response => response.json()).then(movieData => {\n            return {\n              imdbID: movieData.id,\n              Title: movieData.title,\n              Poster: `https://image.tmdb.org/t/p/w500/${movieData.poster_path}`\n            };\n          });\n        });\n        Promise.all(moviesWithPosters).then(moviesWithUpdatedPosters => {\n          setMovies(moviesWithUpdatedPosters.slice(0, 10) || []);\n          setLoading(false);\n        });\n      } else {\n        setMovies([]);\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.error('Error fetching movies:', error);\n      setMovies([]);\n      setLoading(false);\n    });\n  };\n  const handleSearch = searchInput => {\n    setLoading(true);\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=ae57e943f23fd67a50f1579e4ed5e7c5&query=${searchInput}`).then(response => response.json()).then(data => {\n      console.log('Search API response', data);\n      if (data.results && data.results.length > 0) {\n        var _s = $RefreshSig$();\n        const moviesWithPosters = data.results.map(movie => {\n          return fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=ae57e943f23fd67a50f1579e4ed5e7c5`).then(response => response.json());\n        });\n        _s(Promise.all(moviesWithPosters).then(_s(moviesWithUpdatedData => {\n          _s();\n          console.log('Movies with updated data', moviesWithUpdatedData);\n          setMovies(moviesWithUpdatedData.map(movieData => ({\n            imdbID: movieData.id,\n            Title: movieData.title,\n            Poster: `https://image.tmdb.org/t/p/w500/${movieData.poster_path}`\n          })));\n          setLoading(false);\n\n          // Show recently searched movies when a search is performed\n          const [showRecentlySearched, setShowRecentlySearched] = useState(false);\n          setShowRecentlySearched(true);\n        }, \"dTUp5HoJ6Uxx3s5+HB18eUeq9YE=\")), \"dTUp5HoJ6Uxx3s5+HB18eUeq9YE=\");\n      } else {\n        setMovies([]);\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.error('Error searching movies:', error);\n      setMovies([]);\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `space-below-title ${showBackgroundImage ? 'show-image' : ''}`,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"movies\",\n        children: \"Movie Madness\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieSearch, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading movies...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"movie-list\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"movie-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movie/${movie.imdbID}`,\n          className: \"movie-link\",\n          onClick: () => {\n            history.push(`/movie/${movie.imdbID}`); // Use history.push() to navigate\n            setShowBackgroundImage(false);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.Poster,\n            alt: movie.Title,\n            className: \"movie-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"movie-title\",\n            children: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), showRecentlySearched && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recently-searched\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s2(MovieList, \"JSRdPFKTHDbbR2Ze6AVvypSO15M=\", false, function () {\n  return [useHistory];\n});\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","Link","useHistory","MovieSearch","jsxDEV","_jsxDEV","MovieList","_s2","movies","setMovies","loading","setLoading","showBackgroundImage","setShowBackgroundImage","history","fetchMovies","fetch","then","response","json","data","results","length","moviesWithPosters","map","movie","id","movieData","imdbID","Title","title","Poster","poster_path","Promise","all","moviesWithUpdatedPosters","slice","catch","error","console","handleSearch","searchInput","log","_s","$RefreshSig$","moviesWithUpdatedData","showRecentlySearched","setShowRecentlySearched","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","to","onClick","push","src","alt","_c","$RefreshReg$"],"sources":["/home/ian/coding/madness/group-5/src/MovieList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport MovieSearch from './MovieSearch';\nimport './MovieList.css'; // Import CSS file\n\nfunction MovieList() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showBackgroundImage, setShowBackgroundImage] = useState(true); // Add state variable\n\n  const history = useHistory(); // Initialize useHistory\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const fetchMovies = () => {\n    fetch('https://api.themoviedb.org/3/movie/popular?api_key=ae57e943f23fd67a50f1579e4ed5e7c5')\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.results && data.results.length > 0) {\n          const moviesWithPosters = data.results.map((movie) => {\n            return fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=ae57e943f23fd67a50f1579e4ed5e7c5`)\n              .then((response) => response.json())\n              .then((movieData) => {\n                return {\n                  imdbID: movieData.id,\n                  Title: movieData.title,\n                  Poster: `https://image.tmdb.org/t/p/w500/${movieData.poster_path}`,\n                };\n              });\n          });\n\n          Promise.all(moviesWithPosters)\n            .then((moviesWithUpdatedPosters) => {\n              setMovies(moviesWithUpdatedPosters.slice(0, 10) || []);\n              setLoading(false);\n            });\n        } else {\n          setMovies([]);\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.error('Error fetching movies:', error);\n        setMovies([]);\n        setLoading(false);\n      });\n  };\n\n  const handleSearch = (searchInput) => {\n    setLoading(true);\n\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=ae57e943f23fd67a50f1579e4ed5e7c5&query=${searchInput}`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('Search API response', data);\n\n        if (data.results && data.results.length > 0) {\n          const moviesWithPosters = data.results.map((movie) => {\n            return fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=ae57e943f23fd67a50f1579e4ed5e7c5`)\n              .then((response) => response.json());\n          });\n\n          Promise.all(moviesWithPosters)\n            .then((moviesWithUpdatedData) => {\n              console.log('Movies with updated data', moviesWithUpdatedData);\n              setMovies(\n                moviesWithUpdatedData.map((movieData) => ({\n                  imdbID: movieData.id,\n                  Title: movieData.title,\n                  Poster: `https://image.tmdb.org/t/p/w500/${movieData.poster_path}`,\n                }))\n              );\n              setLoading(false);\n\n              // Show recently searched movies when a search is performed\n              const [showRecentlySearched, setShowRecentlySearched] = useState(false);\n              setShowRecentlySearched(true);\n            });\n        } else {\n          setMovies([]);\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.error('Error searching movies:', error);\n        setMovies([]);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"movie-list-container\">\n      <div className={`space-below-title ${showBackgroundImage ? 'show-image' : ''}`}> {/* Conditionally add 'show-image' class */}\n        <h1 className=\"movies\">Movie Madness</h1>\n      </div>\n      <MovieSearch onSearch={handleSearch} />\n      {loading ? (\n        <p>Loading movies...</p>\n      ) : movies.length > 0 ? (\n        <ul className=\"movie-list\">\n          {movies.map((movie) => (\n            <li key={movie.imdbID} className=\"movie-item\">\n              <Link\n                to={`/movie/${movie.imdbID}`}\n                className=\"movie-link\"\n                onClick={() => {\n                  history.push(`/movie/${movie.imdbID}`); // Use history.push() to navigate\n                  setShowBackgroundImage(false);\n                }}\n              >\n                <img src={movie.Poster} alt={movie.Title} className=\"movie-image\" />\n                <p className=\"movie-title\">{movie.Title}</p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No movies found.</p>\n      )}\n      \n      {/* Render recently searched movies when the state is true */}\n      {showRecentlySearched && (\n        <div className=\"recently-searched\">\n          {/* Add your code to display recently searched movies here */}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MovieList;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}