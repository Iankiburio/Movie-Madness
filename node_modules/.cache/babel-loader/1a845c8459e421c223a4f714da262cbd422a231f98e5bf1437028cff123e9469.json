{"ast":null,"code":"var _jsxFileName = \"/home/ian/coding/phase 2/group project/group-5/src/MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport MovieSearch from './MovieSearch';\nimport './MovieList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieList() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const fetchMovies = () => {\n    fetch('http://www.omdbapi.com/?s=movie&apikey=5908eaa3').then(response => response.json()).then(data => {\n      if (data.Search && data.Search.length > 0) {\n        // Added check for data.Search\n        const moviesWithPosters = data.Search.map(movie => {\n          return fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=5908eaa3`).then(response => response.json()).then(movieData => {\n            return {\n              ...movie,\n              Poster: movieData.Poster\n            };\n          });\n        });\n        Promise.all(moviesWithPosters).then(moviesWithUpdatedPosters => {\n          setMovies(moviesWithUpdatedPosters || []);\n          setLoading(false);\n        });\n      } else {\n        setMovies([]);\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.error('Error fetching movies:', error);\n      setMovies([]);\n      setLoading(false);\n    });\n  };\n  const deleteMovie = id => {\n    fetch(`http://www.omdbapi.com/?i=tt3896198&apikey=5908eaa3/${id}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(() => {\n      fetchMovies();\n    });\n  };\n  const handleSearch = searchInput => {\n    fetch(`http://www.omdbapi.com/?s=${searchInput}&apikey=5908eaa3`).then(response => response.json()).then(data => {\n      console.log('Search API response', data);\n      if (data.Search && data.Search.length > 0) {\n        const moviesWithPosters = data.Search.map(movie => {\n          return fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=5908eaa3`).then(response => response.json());\n        });\n        Promise.all(moviesWithPosters).then(moviesWithUpdatedData => {\n          console.log('Movies with updated data', moviesWithUpdatedData);\n          setMovies(moviesWithUpdatedData || []);\n          setLoading(false);\n        });\n      } else {\n        setMovies([]);\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.error('Error searching movies:', error);\n      setMovies([]);\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"movies\",\n      children: \"Movies Madness\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieSearch, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading movies...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"movie-list\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"movie-item\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/movie/${movie.imdbID}`,\n          className: \"movie-link\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.Poster,\n            alt: movie.Title,\n            className: \"movie-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"movie-title\",\n            children: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteMovie(movie.imdbID),\n          className: \"movie-delete-button\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, movie.imdbID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieList, \"72fwlr08e18pammocXupWZZTEwc=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","Link","MovieSearch","jsxDEV","_jsxDEV","MovieList","_s","movies","setMovies","loading","setLoading","fetchMovies","fetch","then","response","json","data","Search","length","moviesWithPosters","map","movie","imdbID","movieData","Poster","Promise","all","moviesWithUpdatedPosters","catch","error","console","deleteMovie","id","method","handleSearch","searchInput","log","moviesWithUpdatedData","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","to","src","alt","Title","onClick","_c","$RefreshReg$"],"sources":["/home/ian/coding/phase 2/group project/group-5/src/MovieList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport MovieSearch from './MovieSearch';\nimport './MovieList.css';\n\nfunction MovieList() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const fetchMovies = () => {\n    fetch('http://www.omdbapi.com/?s=movie&apikey=5908eaa3')\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.Search && data.Search.length > 0) { // Added check for data.Search\n          const moviesWithPosters = data.Search.map((movie) => {\n            return fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=5908eaa3`)\n              .then((response) => response.json())\n              .then((movieData) => {\n                return {\n                  ...movie,\n                  Poster: movieData.Poster,\n                };\n              });\n          });\n\n          Promise.all(moviesWithPosters)\n            .then((moviesWithUpdatedPosters) => {\n              setMovies(moviesWithUpdatedPosters || []);\n              setLoading(false);\n            });\n        } else {\n          setMovies([]);\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.error('Error fetching movies:', error);\n        setMovies([]);\n        setLoading(false);\n      });\n  };\n\n  const deleteMovie = (id) => {\n    fetch(`http://www.omdbapi.com/?i=tt3896198&apikey=5908eaa3/${id}`, {\n      method: 'DELETE',\n    })\n      .then((response) => response.json())\n      .then(() => {\n        fetchMovies();\n      });\n  };\n\n  const handleSearch = (searchInput) => {\n    fetch(`http://www.omdbapi.com/?s=${searchInput}&apikey=5908eaa3`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('Search API response', data);\n  \n        if (data.Search && data.Search.length > 0) {\n          const moviesWithPosters = data.Search.map((movie) => {\n            return fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=5908eaa3`)\n              .then((response) => response.json());\n          });\n  \n          Promise.all(moviesWithPosters)\n            .then((moviesWithUpdatedData) => {\n              console.log('Movies with updated data', moviesWithUpdatedData);\n              setMovies(moviesWithUpdatedData || []);\n              setLoading(false);\n            });\n        } else {\n          setMovies([]);\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.error('Error searching movies:', error);\n        setMovies([]);\n        setLoading(false);\n      });\n  };\n  \n\n  return (\n    <div>\n      <h1 className='movies'>Movies Madness</h1>\n      <MovieSearch onSearch={handleSearch} />\n      {loading ? (\n        <p>Loading movies...</p>\n      ) : movies.length > 0 ? (\n        <ul className=\"movie-list\">\n          {movies.map((movie) => (\n            <li key={movie.imdbID} className=\"movie-item\">\n              <Link to={`/movie/${movie.imdbID}`} className=\"movie-link\">\n                <img src={movie.Poster} alt={movie.Title} className=\"movie-image\" />\n                <p className=\"movie-title\">{movie.Title}</p>\n              </Link>\n              <button onClick={() => deleteMovie(movie.imdbID)} className=\"movie-delete-button\">Delete</button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No movies found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default MovieList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}