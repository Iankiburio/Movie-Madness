{"ast":null,"code":"var _jsxFileName = \"/home/ian/coding/phase 2/group project/group-5/src/MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport MovieSearch from './MovieSearch';\nimport './MovieList.css'; // Import CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieList() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const fetchMovies = () => {\n    fetch('https://api.themoviedb.org/3/movie/popular?api_key=ae57e943f23fd67a50f1579e4ed5e7c5').then(response => response.json()).then(data => {\n      if (data.results && data.results.length > 0) {\n        const moviesWithPosters = data.results.map(movie => {\n          return fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=ae57e943f23fd67a50f1579e4ed5e7c5`).then(response => response.json()).then(movieData => {\n            return {\n              imdbID: movieData.id,\n              Title: movieData.title,\n              Poster: `https://image.tmdb.org/t/p/w500/${movieData.poster_path}`\n            };\n          });\n        });\n        Promise.all(moviesWithPosters).then(moviesWithUpdatedPosters => {\n          setMovies(moviesWithUpdatedPosters.slice(0, 10) || []);\n          setLoading(false);\n        });\n      } else {\n        setMovies([]);\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.error('Error fetching movies:', error);\n      setMovies([]);\n      setLoading(false);\n    });\n  };\n  const handleSearch = searchInput => {\n    setLoading(true);\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=ae57e943f23fd67a50f1579e4ed5e7c5&query=${searchInput}`).then(response => response.json()).then(data => {\n      console.log('Search API response', data);\n      if (data.results && data.results.length > 0) {\n        const moviesWithPosters = data.results.map(movie => {\n          return fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=ae57e943f23fd67a50f1579e4ed5e7c5`).then(response => response.json());\n        });\n        Promise.all(moviesWithPosters).then(moviesWithUpdatedData => {\n          console.log('Movies with updated data', moviesWithUpdatedData);\n          setMovies(moviesWithUpdatedData.map(movieData => ({\n            imdbID: movieData.id,\n            Title: movieData.title,\n            Poster: `https://image.tmdb.org/t/p/w500/${movieData.poster_path}`\n          })));\n          setLoading(false);\n        });\n      } else {\n        setMovies([]);\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.error('Error searching movies:', error);\n      setMovies([]);\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"movies\",\n      children: \"Movies Madness\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieSearch, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading movies...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"movie-list\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"movie-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movie/${movie.imdbID}`,\n          className: \"movie-link\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.Poster,\n            alt: movie.Title,\n            className: \"movie-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"movie-title\",\n            children: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieList, \"72fwlr08e18pammocXupWZZTEwc=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","Link","MovieSearch","jsxDEV","_jsxDEV","MovieList","_s","movies","setMovies","loading","setLoading","fetchMovies","fetch","then","response","json","data","results","length","moviesWithPosters","map","movie","id","movieData","imdbID","Title","title","Poster","poster_path","Promise","all","moviesWithUpdatedPosters","slice","catch","error","console","handleSearch","searchInput","log","moviesWithUpdatedData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","to","src","alt","_c","$RefreshReg$"],"sources":["/home/ian/coding/phase 2/group project/group-5/src/MovieList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport MovieSearch from './MovieSearch';\nimport './MovieList.css'; // Import CSS file\n\nfunction MovieList() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const fetchMovies = () => {\n    fetch('https://api.themoviedb.org/3/movie/popular?api_key=ae57e943f23fd67a50f1579e4ed5e7c5')\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.results && data.results.length > 0) {\n          const moviesWithPosters = data.results.map((movie) => {\n            return fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=ae57e943f23fd67a50f1579e4ed5e7c5`)\n              .then((response) => response.json())\n              .then((movieData) => {\n                return {\n                  imdbID: movieData.id,\n                  Title: movieData.title,\n                  Poster: `https://image.tmdb.org/t/p/w500/${movieData.poster_path}`,\n                };\n              });\n          });\n\n          Promise.all(moviesWithPosters)\n            .then((moviesWithUpdatedPosters) => {\n              setMovies(moviesWithUpdatedPosters.slice(0, 10) || []);\n              setLoading(false);\n            });\n        } else {\n          setMovies([]);\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.error('Error fetching movies:', error);\n        setMovies([]);\n        setLoading(false);\n      });\n  };\n\n  const handleSearch = (searchInput) => {\n    setLoading(true);\n\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=ae57e943f23fd67a50f1579e4ed5e7c5&query=${searchInput}`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('Search API response', data);\n\n        if (data.results && data.results.length > 0) {\n          const moviesWithPosters = data.results.map((movie) => {\n            return fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=ae57e943f23fd67a50f1579e4ed5e7c5`)\n              .then((response) => response.json());\n          });\n\n          Promise.all(moviesWithPosters)\n            .then((moviesWithUpdatedData) => {\n              console.log('Movies with updated data', moviesWithUpdatedData);\n              setMovies(\n                moviesWithUpdatedData.map((movieData) => ({\n                  imdbID: movieData.id,\n                  Title: movieData.title,\n                  Poster: `https://image.tmdb.org/t/p/w500/${movieData.poster_path}`,\n                }))\n              );\n              setLoading(false);\n            });\n        } else {\n          setMovies([]);\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.error('Error searching movies:', error);\n        setMovies([]);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"movie-list-container\">\n      <h1 className=\"movies\">Movies Madness</h1>\n      \n      <MovieSearch onSearch={handleSearch} />\n      {loading ? (\n        <p>Loading movies...</p>\n      ) : movies.length > 0 ? (\n        <ul className=\"movie-list\">\n          {movies.map((movie) => (\n            <li key={movie.imdbID} className=\"movie-item\">\n              <Link to={`/movie/${movie.imdbID}`} className=\"movie-link\">\n                <img src={movie.Poster} alt={movie.Title} className=\"movie-image\" />\n                <p className=\"movie-title\">{movie.Title}</p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No movies found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default MovieList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdY,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAGA,CAAA,KAAM;IACxBC,KAAK,CAAC,qFAAqF,CAAC,CACzFC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,OAAO,IAAID,IAAI,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;QAC3C,MAAMC,iBAAiB,GAAGH,IAAI,CAACC,OAAO,CAACG,GAAG,CAAEC,KAAK,IAAK;UACpD,OAAOT,KAAK,CAAE,sCAAqCS,KAAK,CAACC,EAAG,2CAA0C,CAAC,CACpGT,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEU,SAAS,IAAK;YACnB,OAAO;cACLC,MAAM,EAAED,SAAS,CAACD,EAAE;cACpBG,KAAK,EAAEF,SAAS,CAACG,KAAK;cACtBC,MAAM,EAAG,mCAAkCJ,SAAS,CAACK,WAAY;YACnE,CAAC;UACH,CAAC,CAAC;QACN,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CAACX,iBAAiB,CAAC,CAC3BN,IAAI,CAAEkB,wBAAwB,IAAK;UAClCvB,SAAS,CAACuB,wBAAwB,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC;UACtDtB,UAAU,CAAC,KAAK,CAAC;QACnB,CAAC,CAAC;MACN,CAAC,MAAM;QACLF,SAAS,CAAC,EAAE,CAAC;QACbE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,CAAC,CACDuB,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C1B,SAAS,CAAC,EAAE,CAAC;MACbE,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC;EAED,MAAM0B,YAAY,GAAIC,WAAW,IAAK;IACpC3B,UAAU,CAAC,IAAI,CAAC;IAEhBE,KAAK,CAAE,4FAA2FyB,WAAY,EAAC,CAAC,CAC7GxB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdmB,OAAO,CAACG,GAAG,CAAC,qBAAqB,EAAEtB,IAAI,CAAC;MAExC,IAAIA,IAAI,CAACC,OAAO,IAAID,IAAI,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;QAC3C,MAAMC,iBAAiB,GAAGH,IAAI,CAACC,OAAO,CAACG,GAAG,CAAEC,KAAK,IAAK;UACpD,OAAOT,KAAK,CAAE,sCAAqCS,KAAK,CAACC,EAAG,2CAA0C,CAAC,CACpGT,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC;QAEFc,OAAO,CAACC,GAAG,CAACX,iBAAiB,CAAC,CAC3BN,IAAI,CAAE0B,qBAAqB,IAAK;UAC/BJ,OAAO,CAACG,GAAG,CAAC,0BAA0B,EAAEC,qBAAqB,CAAC;UAC9D/B,SAAS,CACP+B,qBAAqB,CAACnB,GAAG,CAAEG,SAAS,KAAM;YACxCC,MAAM,EAAED,SAAS,CAACD,EAAE;YACpBG,KAAK,EAAEF,SAAS,CAACG,KAAK;YACtBC,MAAM,EAAG,mCAAkCJ,SAAS,CAACK,WAAY;UACnE,CAAC,CAAC,CACJ,CAAC;UACDlB,UAAU,CAAC,KAAK,CAAC;QACnB,CAAC,CAAC;MACN,CAAC,MAAM;QACLF,SAAS,CAAC,EAAE,CAAC;QACbE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,CAAC,CACDuB,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C1B,SAAS,CAAC,EAAE,CAAC;MACbE,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC;EAED,oBACEN,OAAA;IAAKoC,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCrC,OAAA;MAAIoC,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1CzC,OAAA,CAACF,WAAW;MAAC4C,QAAQ,EAAEV;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACtCpC,OAAO,gBACNL,OAAA;MAAAqC,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACtBtC,MAAM,CAACW,MAAM,GAAG,CAAC,gBACnBd,OAAA;MAAIoC,SAAS,EAAC,YAAY;MAAAC,QAAA,EACvBlC,MAAM,CAACa,GAAG,CAAEC,KAAK,iBAChBjB,OAAA;QAAuBoC,SAAS,EAAC,YAAY;QAAAC,QAAA,eAC3CrC,OAAA,CAACH,IAAI;UAAC8C,EAAE,EAAG,UAAS1B,KAAK,CAACG,MAAO,EAAE;UAACgB,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACxDrC,OAAA;YAAK4C,GAAG,EAAE3B,KAAK,CAACM,MAAO;YAACsB,GAAG,EAAE5B,KAAK,CAACI,KAAM;YAACe,SAAS,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpEzC,OAAA;YAAGoC,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEpB,KAAK,CAACI;UAAK;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC;MAAC,GAJAxB,KAAK,CAACG,MAAM;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKjB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELzC,OAAA;MAAAqC,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACvB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvC,EAAA,CAvGQD,SAAS;AAAA6C,EAAA,GAAT7C,SAAS;AAyGlB,eAAeA,SAAS;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}