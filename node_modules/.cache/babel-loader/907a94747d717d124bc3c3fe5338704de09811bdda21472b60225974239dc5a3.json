{"ast":null,"code":"var _jsxFileName = \"/Users/faith/Development/Code/Phase2/group-5/src/MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport MovieSearch from './MovieSearch';\nimport './MovieMadness.css';\nimport NavBar from './NavBar'; // Import the NavBar component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieList() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showRecentlySearched, setShowRecentlySearched] = useState(false); // New state for showing recently searched movies\n\n  const fetchMovies = () => {\n    fetch('http://www.omdbapi.com/?s=movie&apikey=5908eaa3').then(response => response.json()).then(data => {\n      if (data.Search && data.Search.length > 0) {\n        const moviesWithPosters = data.Search.map(movie => {\n          return fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=5908eaa3`).then(response => response.json()).then(movieData => {\n            return {\n              ...movie,\n              Poster: movieData.Poster\n            };\n          });\n        });\n        Promise.all(moviesWithPosters).then(moviesWithUpdatedPosters => {\n          setMovies(moviesWithUpdatedPosters.slice(0, 10) || []);\n          setLoading(false);\n        });\n      } else {\n        setMovies([]);\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.error('Error fetching movies:', error);\n      setMovies([]);\n      setLoading(false);\n    });\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  // ... Rest of your code ...\n\n  const handleSearch = searchInput => {\n    setLoading(true);\n    fetch(`http://www.omdbapi.com/?s=${searchInput}&apikey=5908eaa3`).then(response => response.json()).then(data => {\n      console.log('Search API response', data);\n      if (data.Response === \"True\") {\n        const moviesWithPosters = data.Search.map(movie => {\n          return fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=5908eaa3`).then(response => response.json());\n        });\n        Promise.all(moviesWithPosters).then(moviesWithUpdatedData => {\n          console.log('Movies with updated data', moviesWithUpdatedData);\n          setMovies(moviesWithUpdatedData.slice(0, 10) || []);\n          setLoading(false);\n\n          // Show recently searched movies when a search is performed\n          setShowRecentlySearched(true);\n        });\n      } else {\n        setMovies([]);\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.error('Error searching movies:', error);\n      setMovies([]);\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      showRecentlySearchedMovies: () => setShowRecentlySearched(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"movies\",\n      children: \"Movies Madness\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieSearch, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading movies...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"movie-list\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"movie-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movie/${movie.imdbID}`,\n          className: \"movie-link\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.Poster,\n            alt: movie.Title,\n            className: \"movie-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"movie-title\",\n            children: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), showRecentlySearched && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recently-searched\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieList, \"hshUwsh3NZQHgQsj2OF8CjRxz2c=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","Link","MovieSearch","NavBar","jsxDEV","_jsxDEV","MovieList","_s","movies","setMovies","loading","setLoading","showRecentlySearched","setShowRecentlySearched","fetchMovies","fetch","then","response","json","data","Search","length","moviesWithPosters","map","movie","imdbID","movieData","Poster","Promise","all","moviesWithUpdatedPosters","slice","catch","error","console","handleSearch","searchInput","log","Response","moviesWithUpdatedData","children","showRecentlySearchedMovies","fileName","_jsxFileName","lineNumber","columnNumber","className","onSearch","to","src","alt","Title","_c","$RefreshReg$"],"sources":["/Users/faith/Development/Code/Phase2/group-5/src/MovieList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport MovieSearch from './MovieSearch';\nimport './MovieMadness.css';\nimport NavBar from './NavBar'; // Import the NavBar component\n\nfunction MovieList() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showRecentlySearched, setShowRecentlySearched] = useState(false); // New state for showing recently searched movies\n\n  const fetchMovies = () => {\n    fetch('http://www.omdbapi.com/?s=movie&apikey=5908eaa3')\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.Search && data.Search.length > 0) {\n          const moviesWithPosters = data.Search.map((movie) => {\n            return fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=5908eaa3`)\n              .then((response) => response.json())\n              .then((movieData) => {\n                return {\n                  ...movie,\n                  Poster: movieData.Poster,\n                };\n              });\n          });\n\n          Promise.all(moviesWithPosters)\n            .then((moviesWithUpdatedPosters) => {\n              setMovies(moviesWithUpdatedPosters.slice(0, 10) || []);\n              setLoading(false);\n            });\n        } else {\n          setMovies([]);\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.error('Error fetching movies:', error);\n        setMovies([]);\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  // ... Rest of your code ...\n\n  const handleSearch = (searchInput) => {\n    setLoading(true);\n\n    fetch(`http://www.omdbapi.com/?s=${searchInput}&apikey=5908eaa3`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('Search API response', data);\n\n        if (data.Response === \"True\") {\n          const moviesWithPosters = data.Search.map((movie) => {\n            return fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=5908eaa3`)\n              .then((response) => response.json());\n          });\n\n          Promise.all(moviesWithPosters)\n            .then((moviesWithUpdatedData) => {\n              console.log('Movies with updated data', moviesWithUpdatedData);\n              setMovies(moviesWithUpdatedData.slice(0, 10) || []);\n              setLoading(false);\n\n              // Show recently searched movies when a search is performed\n              setShowRecentlySearched(true);\n            });\n        } else {\n          setMovies([]);\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.error('Error searching movies:', error);\n        setMovies([]);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div>\n      <NavBar showRecentlySearchedMovies={() => setShowRecentlySearched(true)} />\n      <h1 className='movies'>Movies Madness</h1>\n      <MovieSearch onSearch={handleSearch} />\n      {loading ? (\n        <p>Loading movies...</p>\n      ) : movies.length > 0 ? (\n        <ul className=\"movie-list\">\n          {movies.map((movie) => (\n            <li key={movie.imdbID} className=\"movie-item\">\n              <Link to={`/movie/${movie.imdbID}`} className=\"movie-link\">\n                <img src={movie.Poster} alt={movie.Title} className=\"movie-image\" />\n                <p className=\"movie-title\">{movie.Title}</p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No movies found.</p>\n      )}\n      \n      {/* Render recently searched movies when the state is true */}\n      {showRecentlySearched && (\n        <div className=\"recently-searched\">\n          {/* Add your code to display recently searched movies here */}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MovieList;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}