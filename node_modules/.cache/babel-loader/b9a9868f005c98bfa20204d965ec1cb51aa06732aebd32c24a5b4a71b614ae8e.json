{"ast":null,"code":"var _jsxFileName = \"/Users/faith/Development/Code/Phase2/group-5/src/MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport MovieSearch from './MovieSearch';\nimport './MovieMadness.css';\nimport NavBar from './NavBar'; // Import the NavBar component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieList() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showRecentlySearched, setShowRecentlySearched] = useState(false); // New state for showing recently searched movies\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  // ... Rest of your code ...\n\n  const handleSearch = searchInput => {\n    setLoading(true);\n    fetch(`http://www.omdbapi.com/?s=${searchInput}&apikey=5908eaa3`).then(response => response.json()).then(data => {\n      console.log('Search API response', data);\n      if (data.Response === \"True\") {\n        const moviesWithPosters = data.Search.map(movie => {\n          return fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=5908eaa3`).then(response => response.json());\n        });\n        Promise.all(moviesWithPosters).then(moviesWithUpdatedData => {\n          console.log('Movies with updated data', moviesWithUpdatedData);\n          setMovies(moviesWithUpdatedData.slice(0, 10) || []);\n          setLoading(false);\n\n          // Show recently searched movies when a search is performed\n          setShowRecentlySearched(true);\n        });\n      } else {\n        setMovies([]);\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.error('Error searching movies:', error);\n      setMovies([]);\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      showRecentlySearchedMovies: () => setShowRecentlySearched(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"movies\",\n      children: \"Movies Madness\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieSearch, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading movies...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"movie-list\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"movie-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movie/${movie.imdbID}`,\n          className: \"movie-link\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.Poster,\n            alt: movie.Title,\n            className: \"movie-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"movie-title\",\n            children: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), showRecentlySearched && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recently-searched\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieList, \"hshUwsh3NZQHgQsj2OF8CjRxz2c=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","Link","MovieSearch","NavBar","jsxDEV","_jsxDEV","MovieList","_s","movies","setMovies","loading","setLoading","showRecentlySearched","setShowRecentlySearched","fetchMovies","handleSearch","searchInput","fetch","then","response","json","data","console","log","Response","moviesWithPosters","Search","map","movie","imdbID","Promise","all","moviesWithUpdatedData","slice","catch","error","children","showRecentlySearchedMovies","fileName","_jsxFileName","lineNumber","columnNumber","className","onSearch","length","to","src","Poster","alt","Title","_c","$RefreshReg$"],"sources":["/Users/faith/Development/Code/Phase2/group-5/src/MovieList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport MovieSearch from './MovieSearch';\nimport './MovieMadness.css';\nimport NavBar from './NavBar'; // Import the NavBar component\n\nfunction MovieList() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showRecentlySearched, setShowRecentlySearched] = useState(false); // New state for showing recently searched movies\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  // ... Rest of your code ...\n\n  const handleSearch = (searchInput) => {\n    setLoading(true);\n\n    fetch(`http://www.omdbapi.com/?s=${searchInput}&apikey=5908eaa3`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('Search API response', data);\n\n        if (data.Response === \"True\") {\n          const moviesWithPosters = data.Search.map((movie) => {\n            return fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=5908eaa3`)\n              .then((response) => response.json());\n          });\n\n          Promise.all(moviesWithPosters)\n            .then((moviesWithUpdatedData) => {\n              console.log('Movies with updated data', moviesWithUpdatedData);\n              setMovies(moviesWithUpdatedData.slice(0, 10) || []);\n              setLoading(false);\n\n              // Show recently searched movies when a search is performed\n              setShowRecentlySearched(true);\n            });\n        } else {\n          setMovies([]);\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.error('Error searching movies:', error);\n        setMovies([]);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div>\n      <NavBar showRecentlySearchedMovies={() => setShowRecentlySearched(true)} />\n      <h1 className='movies'>Movies Madness</h1>\n      <MovieSearch onSearch={handleSearch} />\n      {loading ? (\n        <p>Loading movies...</p>\n      ) : movies.length > 0 ? (\n        <ul className=\"movie-list\">\n          {movies.map((movie) => (\n            <li key={movie.imdbID} className=\"movie-item\">\n              <Link to={`/movie/${movie.imdbID}`} className=\"movie-link\">\n                <img src={movie.Poster} alt={movie.Title} className=\"movie-image\" />\n                <p className=\"movie-title\">{movie.Title}</p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No movies found.</p>\n      )}\n      \n      {/* Render recently searched movies when the state is true */}\n      {showRecentlySearched && (\n        <div className=\"recently-searched\">\n          {/* Add your code to display recently searched movies here */}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MovieList;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}