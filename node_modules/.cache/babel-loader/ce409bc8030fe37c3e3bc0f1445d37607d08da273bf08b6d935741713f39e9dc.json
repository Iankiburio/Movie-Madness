{"ast":null,"code":"var _jsxFileName = \"/home/ian/coding/phase 2/group project/group-5/src/MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport MovieSearch from './MovieSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieList() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const fetchMovies = () => {\n    fetch('https://api.themoviedb.org/3/movie/popular?api_key=ae57e943f23fd67a50f1579e4ed5e7c5').then(response => response.json()).then(data => {\n      if (data.results && data.results.length > 0) {\n        const moviesWithPosters = data.results.map(movie => {\n          return fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=ae57e943f23fd67a50f1579e4ed5e7c5`).then(response => response.json()).then(movieData => {\n            return {\n              imdbID: movieData.id,\n              Title: movieData.title,\n              Poster: `https://image.tmdb.org/t/p/w500/${movieData.poster_path}`\n            };\n          });\n        });\n        Promise.all(moviesWithPosters).then(moviesWithUpdatedPosters => {\n          setMovies(moviesWithUpdatedPosters || []);\n          setLoading(false);\n        });\n      } else {\n        setMovies([]);\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.error('Error fetching movies:', error);\n      setMovies([]);\n      setLoading(false);\n    });\n  };\n  const handleSearch = searchInput => {\n    setLoading(true);\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=ae57e943f23fd67a50f1579e4ed5e7c5&query=${searchInput}`).then(response => response.json()).then(data => {\n      if (data.results && data.results.length > 0) {\n        const moviesWithPosters = data.results.map(movie => {\n          return fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=ae57e943f23fd67a50f1579e4ed5e7c5`).then(response => response.json());\n        });\n        Promise.all(moviesWithPosters).then(moviesWithUpdatedData => {\n          setMovies(moviesWithUpdatedData.map(movieData => ({\n            imdbID: movieData.id,\n            Title: movieData.title,\n            Poster: `https://image.tmdb.org/t/p/w500/${movieData.poster_path}`\n          })));\n          setLoading(false);\n        });\n      } else {\n        setMovies([]);\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.error('Error searching movies:', error);\n      setMovies([]);\n      setLoading(false);\n    });\n  };\n  const handleGoBack = () => {\n    history.goBack();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoBack,\n      className: \"movies\",\n      children: \"Movies Madness\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieSearch, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading movies...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"movie-list\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"movie-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.Poster,\n          alt: movie.Title,\n          className: \"movie-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"movie-title\",\n          children: movie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)]\n      }, movie.imdbID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieList, \"a2FawKdEpA3r8Frgk3Xm/WXdqsY=\", false, function () {\n  return [useHistory];\n});\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","MovieSearch","jsxDEV","_jsxDEV","MovieList","_s","movies","setMovies","loading","setLoading","history","fetchMovies","fetch","then","response","json","data","results","length","moviesWithPosters","map","movie","id","movieData","imdbID","Title","title","Poster","poster_path","Promise","all","moviesWithUpdatedPosters","catch","error","console","handleSearch","searchInput","moviesWithUpdatedData","handleGoBack","goBack","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","src","alt","_c","$RefreshReg$"],"sources":["/home/ian/coding/phase 2/group project/group-5/src/MovieList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport MovieSearch from './MovieSearch';\n\nfunction MovieList() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const fetchMovies = () => {\n    fetch('https://api.themoviedb.org/3/movie/popular?api_key=ae57e943f23fd67a50f1579e4ed5e7c5')\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.results && data.results.length > 0) {\n          const moviesWithPosters = data.results.map((movie) => {\n            return fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=ae57e943f23fd67a50f1579e4ed5e7c5`)\n              .then((response) => response.json())\n              .then((movieData) => {\n                return {\n                  imdbID: movieData.id,\n                  Title: movieData.title,\n                  Poster: `https://image.tmdb.org/t/p/w500/${movieData.poster_path}`,\n                };\n              });\n          });\n\n          Promise.all(moviesWithPosters)\n            .then((moviesWithUpdatedPosters) => {\n              setMovies(moviesWithUpdatedPosters || []);\n              setLoading(false);\n            });\n        } else {\n          setMovies([]);\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.error('Error fetching movies:', error);\n        setMovies([]);\n        setLoading(false);\n      });\n  };\n\n  const handleSearch = (searchInput) => {\n    setLoading(true);\n\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=ae57e943f23fd67a50f1579e4ed5e7c5&query=${searchInput}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.results && data.results.length > 0) {\n          const moviesWithPosters = data.results.map((movie) => {\n            return fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=ae57e943f23fd67a50f1579e4ed5e7c5`)\n              .then((response) => response.json());\n          });\n\n          Promise.all(moviesWithPosters)\n            .then((moviesWithUpdatedData) => {\n              setMovies(\n                moviesWithUpdatedData.map((movieData) => ({\n                  imdbID: movieData.id,\n                  Title: movieData.title,\n                  Poster: `https://image.tmdb.org/t/p/w500/${movieData.poster_path}`,\n                }))\n              );\n              setLoading(false);\n            });\n        } else {\n          setMovies([]);\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.error('Error searching movies:', error);\n        setMovies([]);\n        setLoading(false);\n      });\n  };\n\n  const handleGoBack = () => {\n    history.goBack();\n  };\n\n  return (\n    <div>\n      <button onClick={handleGoBack} className=\"movies\">\n        Movies Madness\n      </button>\n      <MovieSearch onSearch={handleSearch} />\n      {loading ? (\n        <p>Loading movies...</p>\n      ) : movies.length > 0 ? (\n        <ul className=\"movie-list\">\n          {movies.map((movie) => (\n            <li key={movie.imdbID} className=\"movie-item\">\n              <img src={movie.Poster} alt={movie.Title} className=\"movie-image\" />\n              <p className=\"movie-title\">{movie.Title}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No movies found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default MovieList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}